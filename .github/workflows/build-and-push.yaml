name: Build and push
on:
  push:
    branches:
      - 'main'

concurrency:
  group: build-docker
  cancel-in-progress: true

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/flexget

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.app_version.outputs.app_version }}
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name:  Get latest flexget version
        id: app_version
        run: |
          FLEXGET_VERSION=$(grep '^flexget==' requirements.txt | cut -d '=' -f 3)
          echo "app_version=$FLEXGET_VERSION" >> $GITHUB_OUTPUT

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1


  merge:
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_VERSION: ${{ needs.build.outputs.app_version }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create multi-arch manifest and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY_IMAGE }}:latest \
            -t ${{ env.REGISTRY_IMAGE }}:${{ env.APP_VERSION }} \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
